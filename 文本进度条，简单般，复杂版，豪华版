'''
简单版文本进度条的代码？？ 

import time  

scale = 10 #文本进度条的总宽度  

print("-----执行开始-----")  

for i in range(scale + 1):  

    a = '*' * i  

    b = '.' * (scale - i)  

    c = (i / scale) * 100  

    print("{:^3.of}%[{}->{}]".format(c, a, b))  

    time.sleep(0.1)  

print("-----执行结束-----") 
'''



'''
文本进度条的要求？ 

第一，采用字符串方式打印除动态变化的文本进度条；第二， 进度条需要能在一行中逐渐变化  

如何获取文本进度条的变化时间？采用sleep()模拟一个持续的进程。 
'''
 什么是单行动态刷新？怎么回到行首？怎么不换行？ 

/r 会到行首----end = " " 不换行 

单行动态刷新  

第一，刷新的本质 就是 用后打印的字符覆盖之前的字符； 第二，不能换行：print()需要被控制；第三，要能回退：打印后光标退后到之前的位置/r---所以，刷新的关键是"/r"。例：  

import time  

for i in range(101): #为什么是101次。因为0%到100%刚好是101次。因为计算机从0开始。+1 print("/r{:3}%".format, end = " ")  

time.sleep(0.1) 

------为什么100%的文本进度条循环101次？即：for i in range(101) : 为什么？ 

因为0%到100%刚好是101次。因为计算机从0开始。+1 


'''
复杂版：
 加上单行动态刷新后的文本进度条代码？？ 

import time  

scale = 50  

print("执行开始'.center(scale//2, "-"))  

start = time.perf_countr()  

for i in range(scale + 1):  

    a = '*' * i  

    b = '.' * (scale - i)  

    c = (i / scale) * 100  

    dur = time.perf_counter() - start  

    print("\r{:^3.0f}%[{}->{}]{:.2f}s".format(c, a, b, dur), end = ' ')  

    time.sleep(0.1)  

print("\n" + "执行结束".center(scale//2, '-')) 

'''

#豪华版待续









