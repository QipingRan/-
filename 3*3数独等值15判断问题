The Lo Shu Magic Square is a 3 by 3 grid with the following properties:
The grid contains the numbers 1 through 9 where each number appears exactly once in the grid.
The sum of each row, each column, and each diagonal all add up to the same number, 15.
 An example of a  Lo Shu Magic Square is as follows:
 

 Magic Square   Remark: Image adopted from http://en.wikipedia.org/wiki/Magic_square
In a program, you can simulate a magic square by using a two-dimensional list. Write a Python program that tests whether or not a 3 by 3 grid is a valid magic square. The program reads the input from a text file named input.txt. Each line in the file contains exactly 9 numbers that correspond to the values in a possible magic square. The first three numbers correspond to the values in the first row, the next three values correspond to the second row, and the last three values correspond to the last row. For example, the above magic square would appear in the file as the line 4 3 8 9 5 1 2 7 6. Sample input file is as follows:  
4 3 8 9 5 1 2 7 6
8 3 4 1 5 9 6 7 2
6 1 8 7 5 3 2 9 4
6 9 8 7 5 3 2 1 4
6 1 8 7 5 3 2 1 4
6 1 3 2 9 4 8 7 5
5 5 5 5 5 5 5 5 5
  
The output from the program is the word valid if the corresponding grid is a valid magic square and the word invalid if it is not. Sample program run using the above input file is as follows:
   
valid
valid
valid
invalid
invalid
invalid
invalid
-----------
代码：

def isvalid(nums):
    for i in range(1, 10):
        if i not in nums:
            return False

    if nums[2]+nums[4]+nums[6]!=15:
        return False
    if nums[0]+nums[4]+nums[8]!=15:
        return False

    for i in range(2):
        if nums[3*i]+nums[1+3*i]+nums[2+3*i]!=15:
            return False
        if nums[i]+nums[i+3]+nums[i+6]!=15:
            return False
    
    return True

def main():
    f=open("./input.txt.txt")
    for line in f:
        nums=list(map(int, line.split()))

        if isvalid(nums):
            print("valid")
        else:
            print("unvalid")

    f.close()


main()
