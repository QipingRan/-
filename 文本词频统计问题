'''
老规矩，先补一下基本常识：
jieba库的概述---jieba是优秀的中文分词第三方库 
第一，中文文本需要通过分词获得单个的词语 
第二，jieba是优秀的中文分词第三方库，需要额外安装 
第三，jieba库提供三种分词模式，最简单只需掌握一个函数 
jieba库的安装---在连网的清空下，命令行cmd ----pip install jieba 
jieba分词的原理----jieba分词依靠中文词库 
第一，利用一个中文词库，确定汉字之间的关联概率 
第二，汉字间概率大的组成词组，组成分词结果 
第三，除了分词，用户还可以添加自定义的词组 
jieba分词的三种模式---精确模式，全模式，搜素引擎模式 
第一，精确模式，把文本精确的切分开，不存在冗余单词 
第二，全模式，把文本中所有可能存在的词语扫描出来，有冗余 
第三，搜索引擎模式，在精确模式的基础伤，对长词再次切分 
-------
jieba库常用函数 
jieba.lcut(s) 精确模式，返回一个列表类型的分词结果 
例：jieba.lcut("中国是一个伟大的国家")-----['中国', '是', '一个', '伟大', '的', '国家'] 
jieba.lcut(s, cut_all=True)全模式，返回一个列表类型的分词结果，存在冗余 
例：jieba.lcut("中国是一个伟大的国家", cut_all=True)----['中国', '国是', '一个', '伟大', '的', '国家'] 
jieba.lcut_for_search(s)  搜索引擎模式，返回一个列表类型的分词结果，存在冗余 
例：jieba.lcut_for_search("中华人民共和国是伟大的')----['中华', '华人', '人民', '共和', '共和国', '中华人名共和国', '是', '伟大', '的'] 
jieba.add_word(w) ----向分词词典增加新词w 
例：jieba.add_word("蟒蛇语言") 
jieba分词要点-----jieba.lcut(s) 

'''
#为什么介绍jieba库呢？因为假如需要进行中文的词频统计的话，这个是绕不开的坎。

'''
文本词频统计-----问题分析 
第一，需求，一篇文章，出现了哪些词？哪些词出现得最多？ 
第二，该怎么做呢？ 
第三，英文文本还是中文文本？ 
'''
excludes={"the","and","of","you","a","i","my","in","to","it","is","not"}
def getText() : 
     txt = open("hamlet.txt", "r").read()  #读取某个文档 
     txt = txt.lower()  #把所有的英文字母全部变成小写 
     for ch in '!"#$%&()*+,-./:;<=>@ [\\]^_'{|}~' :    #意思就是对于每一个特殊符号 
         tex = txt.replace(ch, " ")  #全都替换成空格 
    return txt 
hamletTxt = getText() 
words = hamletTxt.split()   
counts = {}   #定义一个字典为counts 
for word in words : 
     counts[word] = counts.get(word, 0) + 1 
for word in excludes:
    del(counts[word])
items = list(counts.items())  #转变成序列类型 
items.sort(key=lambda x:x[1], reverse=True)  #排序，由大到小 
for i in range(10) : 
     word, count = items[i] 
     print("{0:<10}{1:>5}".format(word, count)) 
'''
先开始英文的把。英文会简单很多
'''

#然后是中文，比如三国演义人物的出场次数

import jieba
excludes={"将军","却说","荆州","二人","不可","不能","如此"}
txt=open("三国演义.txt","r",encoding='utf-8').read()
words=jieba.lcut(txt)
counts={}
for word in words:
    if len(word)==1:
        continue
    elif word=="诸葛亮" or word=="孔明曰":
        rword="孔明"
    elif word=="关公" or word=="云长":
        rword="关羽"
    elif word=="玄德" or word=="玄德曰":
        rword="刘备"
    elif word=="孟德" or word=="丞相":
        rword="曹操"
    else:
        rword=word
    counts[rword]=counts.get(rword,0)+1
for word in excludes:
    del(counts[word])
items=list(counts.items())
items.sort(key=lambda x:x[1],reverse=True)
for i in range(20):
    word,count=items[i]
    print("{0:<10}{1:<5}".format(word,count))
